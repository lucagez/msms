{"version":3,"file":"msms.mjs","sources":["../src/prepareSchema.js","../src/errors.js","../src/stores.js","../src/cp.js","../src/functions.js","../src/msms.js"],"sourcesContent":["const prepareSchema = (schema) => {\n  const state = {};\n  const usedSchema = {};\n\n  for (const prop in schema) {\n    const current = schema[prop];\n    if (typeof current === 'object') {\n      state[prop] = typeof current.default !== 'undefined'\n        ? current.default\n        : current.action({});\n\n      usedSchema[prop] = current;\n    } else {\n      state[prop] = current({});\n      usedSchema[prop] = { action: current };\n    }\n  }\n\n  return {\n    state,\n    usedSchema,\n    props: Object.keys(state),\n  };\n};\n\nexport default prepareSchema;\n","const errors = {\n  prop: (obj, prop) => {\n    if (typeof obj === 'undefined') {\n      throw new Error(`${prop} is not a prop`);\n    }\n  },\n\n  store: (obj, name) => {\n    if (typeof obj === 'undefined') {\n      throw new Error(`${name} is not a store`);\n    }\n  },\n\n  alloweds: (obj, alloweds) => {\n    if (alloweds) {\n      alloweds\n        .forEach((allowed) => {\n          if (typeof obj.schema[allowed] === 'undefined') {\n            throw new Error(`${allowed} is not a prop`);\n          }\n        });\n    }\n  },\n};\n\nexport default errors;\n","const stores = new Map();\n\nexport default stores;\n","const template = params => `\n(function ({${params}}) {\n  return {${params}};\n})\n`;\n\nconst cp = (arr) => {\n  const params = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    params.push(arr[i]);\n  }\n\n  const strParams = params.join(',');\n\n  return eval(template(strParams));\n};\n\nexport default cp;\n","import errors from './errors';\nimport cp from './cp';\n\nconst _copy = (props, state) => {\n  const copyFunc = cp(props);\n  return {\n    copyFunc,\n    copy: () => copyFunc(state),\n  };\n};\n\nconst _send = store => (prop, arg) => {\n  const { length } = store.queue;\n  const current = store.schema[prop];\n\n  errors.prop(current, prop);\n\n  const { validate, action } = current;\n\n  const state = action(store.state, arg);\n\n  if (validate && !validate(state)) return false;\n  if (store.state[prop] === state) return false;\n\n  store.state[prop] = state;\n\n  // Dispatching in O(n) time üòç\n  for (let i = 0; i < length; i++) {\n    const { list, copy, func } = store.queue[i];\n\n    if (list.has(prop)) {\n      func(copy(store.state));\n    }\n  }\n\n  return true;\n};\n\nconst _on = (store, props, copy) => (func) => {\n  if (store.list.has(func)) return;\n\n  store.queue.push({\n    func,\n    list: new Set(props),\n    copy,\n  });\n};\n\nconst _off = store => (func) => {\n  store.list.delete(func);\n  store.queue = store.queue\n    .filter(({ func: current }) => func !== current);\n};\n\nexport {\n  _send,\n  _on,\n  _off,\n  _copy,\n};\n","import prepareSchema from './prepareSchema';\nimport errors from './errors';\nimport stores from './stores';\nimport {\n  _send,\n  _on,\n  _off,\n  _copy,\n} from './functions';\n\nconst create = (name, schema) => {\n  const { state, props, usedSchema } = prepareSchema(schema);\n\n  const store = {\n    state,\n    props,\n    schema: usedSchema,\n    queue: [],\n    list: new Set(),\n  };\n\n  stores.set(name, store);\n};\n\nconst get = (name) => {\n  const store = stores.get(name);\n\n  errors.store(store, name);\n\n  return store.state;\n};\n\nconst use = (name, alloweds) => {\n  const store = stores.get(name);\n\n  errors.store(store, name);\n  errors.alloweds(store, alloweds);\n\n  const usedProps = alloweds || store.props;\n\n  const { copy, copyFunc } = _copy(usedProps, store.state);\n\n  return [\n    _send(store),\n    _on(store, usedProps, copyFunc),\n    _off(store),\n    copy,\n  ];\n};\n\nconst destroy = name => stores.delete(name);\n\nexport {\n  create,\n  use,\n  get,\n  destroy,\n};\n"],"names":["const","prepareSchema","schema","state","usedSchema","prop","current","default","action","props","Object","keys","errors","obj","Error","store","name","alloweds","forEach","allowed","stores","Map","template","params","cp","arr","let","i","length","push","strParams","join","eval","_copy","copyFunc","copy","_send","arg","queue","validate","list","func","has","_on","Set","_off","delete","filter","create","set","get","use","usedProps","destroy"],"mappings":"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"}